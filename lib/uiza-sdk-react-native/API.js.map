{"version":3,"sources":["../../src/API.js"],"names":["API_VERSION","request","url","options","callback","opt","headers","fetch","response","json","responseJson","console","log","getAllConfig","api","appId","entityId","playerId","Promise","all","getAdsConfig","getEntityInfo","getLinkPlayPublish","getPlayerConfig","allConfig","res","ads","entity","linkPlay","player","parseAPIUrl","Base64","atob","Utils","urlToHttps"],"mappings":"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","file":"API.js","sourcesContent":["import React from 'react';\n\nimport Base64 from './utils/Base64';\nimport Utils from './utils/Utils';\n\nconst API_VERSION = 'v1';\n\nexport default {\n  request: async function(url, options = {}, callback = null) {\n    try {\n      // options will extended into opt\n      const opt = {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        ...options\n      };\n\n      let response = await fetch(url, opt);\n      let responseJson = await response.json();\n\n      if (typeof callback === 'function') {\n        return callback({responseJson});\n      }\n\n      return responseJson;\n    } catch (error) {\n      console.log(error);\n\n      if (typeof callback === 'function') {\n        return callback(null);\n      }\n\n      return null;\n    }\n  },\n\n  getAllConfig: async function(api, appId, entityId, playerId, callback) {\n    const allConfig = await Promise.all([\n      this.getAdsConfig(api, appId, entityId),\n      this.getEntityInfo(api, appId, entityId),\n      this.getLinkPlayPublish(api, appId, entityId),\n      this.getPlayerConfig(api, appId, playerId)\n    ]);\n\n    const res = {\n      ads: allConfig[0],\n      entity: allConfig[1],\n      linkPlay: allConfig[2],\n      player: allConfig[3]\n    };\n\n    if (typeof callback === 'function') {\n      return callback(res);\n    }\n\n    return res;\n  },\n\n  getAdsConfig: function(api, appId, entityId, callback) {\n    let url = `${parseAPIUrl(api)}/public/${API_VERSION}/ads/cue-point/${entityId}/info`;\n\n    return this.request(url, {}, callback);\n  },\n\n  getEntityInfo: function(api, appId, entityId, callback) {\n    let url = `${parseAPIUrl(api)}/public/${API_VERSION}/media/entity/info/${entityId}`;\n\n    return this.request(url, {}, callback);\n  },\n\n  getLinkPlayPublish: function(api, appId, entityId, callback) {\n    let url = `${parseAPIUrl(api)}/public/v2/media/entity/get-link-play?appId=${appId}&entityId=${entityId}`;\n\n    return this.request(url, {}, callback);\n  },\n\n  getPlayerConfig: function(api, appId, playerId, callback) {\n    let url = `${parseAPIUrl(api)}/public/${API_VERSION}/player/info/${playerId}`;\n\n    return this.request(url, {}, callback);\n  }\n}\n\nconst parseAPIUrl = function(api) {\n  let url = Base64.atob(api);\n\n  return Utils.urlToHttps(url);\n};\n"]}