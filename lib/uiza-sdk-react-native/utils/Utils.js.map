{"version":3,"sources":["../../../src/utils/Utils.js"],"names":["_debug","Logger","debug","enableDebug","console","log","apply","arguments","info","warn","error","ERROR","WARN","INFO","LOG","urlToHttps","url","result","replace","substr","getOwnPropertyNames","obj","Object","filter","pro","constructor","name","toString","e","queryParams","params","keys","map","encodeURIComponent","k","join","secondToHHMMSS","seconds","isNaN","date","Date","setSeconds","toISOString","tmp","split"],"mappings":"ytBAAA,GAAIA,QAAS,KAAb,C,GACaC,O,SAAAA,M,mIAMKC,K,CAAO,CACrBF,OAAS,CAAC,CAACE,KAAX,CACD,C,mBAEiB,CAChB,MAAOF,OAAP,CACD,C,uCAEc,CACb,GAAIC,OAAOE,WAAX,CAAwB,CACtBC,QAAQC,GAAR,CAAYC,KAAZ,CAAkB,IAAlB,CAAwBC,SAAxB,EACD,CACF,C,iCAEY,CACXH,QAAQC,GAAR,CAAYC,KAAZ,CAAkB,IAAlB,CAAwBC,SAAxB,EACD,C,mCAEa,CACZH,QAAQI,IAAR,CAAaF,KAAb,CAAmB,IAAnB,CAAyBC,SAAzB,EACD,C,mCAEa,CACZH,QAAQK,IAAR,CAAaH,KAAb,CAAmB,IAAnB,CAAyBC,SAAzB,EACD,C,qCAEc,CACbH,QAAQM,KAAR,CAAcJ,KAAd,CAAoB,IAApB,CAA0BC,SAA1B,EACD,C,6BAjCMI,K,CAAQ,C,QACRC,I,CAAO,C,QACPC,I,CAAO,C,QACPC,G,CAAM,C,wBAiCA,CACbC,WAAY,oBAASC,GAAT,CAAc,CACxB,GAAIC,QAASD,IAAIE,OAAJ,CAAY,UAAZ,CAAwB,IAAxB,EAA8BA,OAA9B,CAAsC,SAAtC,CAAiD,IAAjD,EAAuDA,OAAvD,CAA+D,MAA/D,CAAuE,GAAvE,EAA4EA,OAA5E,CAAoF,OAApF,CAA6F,GAA7F,EAAkGA,OAAlG,CAA0G,IAA1G,CAAgH,UAAhH,CAAb,CAEA,GAAID,OAAOE,MAAP,CAAc,CAAd,CAAiB,CAAjB,IAAwB,UAA5B,CAAwC,CACtCF,OAAS,WAAaA,MAAtB,CACD,CAED,MAAOA,OAAP,CACD,CATY,CAWbG,oBAAqB,6BAASC,GAAT,CAA0B,IAAZhB,IAAY,2DAAN,IAAM,CAC7C,GAAI,CACF,MAAOiB,QAAOF,mBAAP,CAA2BC,GAA3B,EAAgCE,MAAhC,CAAuC,SAASC,GAAT,CAAc,CAC1D,GAAIP,QAAS,IAAb,CAIA,GAAIA,QAAUZ,GAAd,CAAmB,CACjBJ,OAAOI,GAAP,CAAWgB,IAAII,WAAJ,CAAgBC,IAAhB,CAAuB,QAAvB,CAAmC,MAAOL,KAAIG,GAAJ,CAA1C,CAAsD,IAAjE,CAAuEA,GAAvE,EACD,CACD,MAAOP,OAAP,CACD,CATM,EASJU,QATI,EAAP,CAUD,CAAC,MAAMC,CAAN,CAAS,CACT,MAAO,EAAP,CACD,CACF,CA1BY,CA4BbC,YAAa,qBAASC,MAAT,CAAiB,CAC5B,MAAOR,QAAOS,IAAP,CAAYD,MAAZ,EACJE,GADI,CACA,kBAAKC,oBAAmBC,CAAnB,EAAwB,GAAxB,CAA8BD,mBAAmBH,OAAOI,CAAP,CAAnB,CAAnC,EADA,EAEJC,IAFI,CAEC,GAFD,CAAP,CAGD,CAhCY,CAkCbC,cAlCa,yBAkCEC,OAlCF,CAkCW,CACtB,GAAIC,MAAMD,OAAN,CAAJ,CAAoB,CAClB,MAAO,OAAP,CACD,CACD,GAAIE,MAAO,GAAIC,KAAJ,CAAS,IAAT,CAAX,CACAD,KAAKE,UAAL,CAAgBJ,OAAhB,EACA,GAAIpB,QAASsB,KAAKG,WAAL,GAAmBvB,MAAnB,CAA0B,EAA1B,CAA8B,CAA9B,CAAb,CACA,GAAMwB,KAAM1B,OAAO2B,KAAP,CAAa,GAAb,CAAZ,CACA,GAAID,IAAI,CAAJ,IAAW,IAAf,CAAqB,CACnB1B,OAAS0B,IAAI,CAAJ,EAAS,GAAT,CAAeA,IAAI,CAAJ,CAAxB,CACD,CAED,MAAO1B,OAAP,CACD,CA/CY,C","file":"Utils.js","sourcesContent":["let _debug = false;\nexport class Logger {\n  static ERROR = 0;\n  static WARN = 1;\n  static INFO = 2;\n  static LOG = 3;\n\n  set enableDebug(debug) {\n    _debug = !!debug;\n  }\n\n  get enableDebug() {\n    return _debug;\n  }\n\n  static debug() {\n    if (Logger.enableDebug) {\n      console.log.apply(null, arguments);\n    }\n  }\n\n  static log() {\n    console.log.apply(null, arguments);\n  }\n\n  static info() {\n    console.info.apply(null, arguments);\n  }\n\n  static warn() {\n    console.warn.apply(null, arguments);\n  }\n\n  static error() {\n    console.error.apply(null, arguments);\n  }\n}\n\nexport default {\n  urlToHttps: function(url) {\n    let result = url.replace('https://', '//').replace('http://', '//').replace(':80/', '/').replace(':443/', '/').replace('//', 'https://');\n    \n    if (result.substr(0, 8) !== 'https://') {\n      result = 'https://' + result;\n    }\n\n    return result;\n  },\n\n  getOwnPropertyNames: function(obj, log = true) {\n    try {\n      return Object.getOwnPropertyNames(obj).filter(function(pro) {\n        let result = true;\n        // result = typeof window[p] === 'function';\n        // result = typeof window[p] === 'object';\n        // result = typeof window[p] === 'string';\n        if (result && log) {\n          Logger.log(obj.constructor.name + ' have ' + (typeof obj[pro]) + ': ', pro);\n        }\n        return result;\n      }).toString();\n    } catch(e) {\n      return '';\n    }\n  },\n\n  queryParams: function(params) {\n    return Object.keys(params)\n      .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n      .join('&');\n  },\n\n  secondToHHMMSS(seconds) {\n    if (isNaN(seconds)) {\n      return '00:00';\n    }\n    let date = new Date(null);\n    date.setSeconds(seconds);\n    let result = date.toISOString().substr(11, 8);\n    const tmp = result.split(':');\n    if (tmp[0] === '00') {\n      result = tmp[1] + ':' + tmp[2];\n    }\n\n    return result;\n  }\n};\n"]}