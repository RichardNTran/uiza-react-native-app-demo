{"version":3,"sources":["../../../../src/skins/uiza/TimeDisplay.js"],"names":["TimeDisplay","props","state","skinState","uzPlayer","player","playbackStatus","durationMillis","pos","parseInt","seek","view","stream","_toggleControls","bind","styles","text","positionStr","Utils","secondToHHMMSS","positionMillis","durationStr","React","Component","StyleSheet","create","alignSelf","flexDirection","height","paddingLeft","paddingRight","textAlignVertical","color","fontSize"],"mappings":"k2BAAA,4B,2CACA,yCACA,wC,+6BAEqBA,Y,oEACnB,qBAAYC,KAAZ,CAAmB,mJACXA,KADW,GAGjB,MAAKC,KAAL,CAAaD,MAAME,SAAnB,CACA,MAAKC,QAAL,CAAgBH,MAAMI,MAAtB,CAJiB,aAKlB,C,iFAEiB,CAChB,GAAI,KAAKH,KAAL,CAAWI,cAAX,CAA0BC,cAA9B,CAA8C,CAC5C,GAAMC,KAAMC,SAAS,KAAKP,KAAL,CAAWI,cAAX,CAA0BC,cAA1B,CAA2C,IAApD,CAA0D,EAA1D,CAAZ,CACA,KAAKH,QAAL,CAAcM,IAAd,CAAmBF,GAAnB,CAAwB,IAAxB,EACD,CACF,C,uCAEQ,CACP,GAAIG,YAAJ,CACA,GAAI,KAAKV,KAAL,CAAWW,MAAX,GAAsB,MAA1B,CAAkC,CAChCD,KACE,8BAAC,qCAAD,EAA0B,QAAS,KAAKE,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAnC,iDACE,8BAAC,iBAAD,aACM,KAAKb,KADX,EAEE,MAAOc,OAAOJ,IAFhB,kDAGE,8BAAC,iBAAD,EAAM,MAAOI,OAAOC,IAApB,wDAHF,CADF,CADF,CASD,CAVD,IAUO,CACL,GAAMC,aAAcC,gBAAMC,cAAN,CAAqBV,SAAS,KAAKP,KAAL,CAAWI,cAAX,CAA0Bc,cAA1B,CAA2C,IAApD,CAA0D,EAA1D,CAArB,CAApB,CACA,GAAMC,aAAcH,gBAAMC,cAAN,CAAqBV,SAAS,KAAKP,KAAL,CAAWI,cAAX,CAA0BC,cAA1B,CAA2C,IAApD,CAA0D,EAA1D,CAArB,CAApB,CACAI,KACE,8BAAC,iBAAD,aACM,KAAKV,KADX,EAEE,MAAOc,OAAOJ,IAFhB,kDAGE,8BAAC,iBAAD,EAAM,MAAOI,OAAOC,IAApB,iDAA2BC,YAAc,KAAd,CAAsBI,WAAjD,CAHF,CADF,CAOD,CAED,MAAOV,KAAP,CACD,C,yBAxCsCW,gBAAMC,S,kBAA1BvB,W,CA2CrB,GAAMe,QAASS,wBAAWC,MAAX,CAAkB,CAC/Bd,KAAM,CACJe,UAAW,UADP,CAEJC,cAAe,KAFX,CAGJC,OAAQ,EAHJ,CAIJC,YAAa,EAJT,CAKJC,aAAc,EALV,CADyB,CAQ/Bd,KAAM,CACJU,UAAW,QADP,CAEJK,kBAAmB,QAFf,CAGJC,MAAO,OAHH,CAIJC,SAAU,EAJN,CARyB,CAAlB,CAAf","file":"TimeDisplay.js","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, TouchableWithoutFeedback, View } from 'react-native';\nimport Utils, { Logger } from '../../utils/Utils';\n\nexport default class TimeDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = props.skinState;\n    this.uzPlayer = props.player;\n  }\n\n  _toggleControls() {\n    if (this.state.playbackStatus.durationMillis) {\n      const pos = parseInt(this.state.playbackStatus.durationMillis / 1000, 10);\n      this.uzPlayer.seek(pos, true);\n    }\n  }\n\n  render() {\n    let view;\n    if (this.props.stream === 'live') {\n      view = (\n        <TouchableWithoutFeedback onPress={this._toggleControls.bind(this)}>\n          <View\n            {...this.props}\n            style={styles.view}>\n            <Text style={styles.text}>Live</Text>\n          </View>\n        </TouchableWithoutFeedback>\n      )\n    } else {\n      const positionStr = Utils.secondToHHMMSS(parseInt(this.state.playbackStatus.positionMillis / 1000, 10));\n      const durationStr = Utils.secondToHHMMSS(parseInt(this.state.playbackStatus.durationMillis / 1000, 10));\n      view = (\n        <View\n          {...this.props}\n          style={styles.view}>\n          <Text style={styles.text}>{positionStr + ' / ' + durationStr}</Text>\n        </View>\n      )\n    }\n\n    return view;\n  }\n}\n\nconst styles = StyleSheet.create({\n  view: {\n    alignSelf: 'flex-end',\n    flexDirection: 'row',\n    height: 48,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  text: {\n    alignSelf: 'center',\n    textAlignVertical: 'center',\n    color: 'white',\n    fontSize: 16\n  },\n});\n"]}