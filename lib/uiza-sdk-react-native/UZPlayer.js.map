{"version":3,"sources":["../../src/UZPlayer.js"],"names":["UZPlayer","props","self","Promise","resolve","Constants","getWebViewUserAgentAsync","then","res","userAgent","deviceId","sessionId","inited","listener","onError","evt","onFullscreenUpdate","onLoad","onLoadStart","onPlaybackStatusUpdate","onReadyForDisplay","API","getAllConfig","api","appId","entityId","playerId","config","linkPlay","all","hls","hls_ts","mpd","hevc","items","map","linkPlays","url","Utils","urlToHttps","view","video","component","Expo","Video","RESIZE_MODE_CONTAIN","styles","init","getDefaultLinkPlay","loadAsync","uri","setStatusAsync","positionMillis","isLooping","shouldPlay","console","log","React","Component","StyleSheet","create","width","height","Platform","OS","parseInt","Version"],"mappings":"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","file":"UZPlayer.js","sourcesContent":["import React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport { Video, Constants } from 'expo';\n\n// import Package from '../package.json';\nimport API from './API';\nimport Utils from './utils/Utils';\n\nexport default class UZPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    self = this;\n    // self.VERSION = Package.version;\n\n    Promise.resolve(Constants.getWebViewUserAgentAsync()).then(function(res) {\n      self.userAgent = res;\n    });\n    self.deviceId = Constants.deviceId;\n    self.sessionId = Constants.sessionId;\n    self.inited = false;\n\n    self.listener = {\n      onError: function(evt) {\n        // console.log('onError callback');\n      },\n      onFullscreenUpdate: function(evt) {\n        // console.log('onFullscreenUpdate callback');\n      },\n      onLoad: function(evt) {\n        // console.log('onLoad callback');\n      },\n      onLoadStart: function(evt) {\n        // console.log('onLoadStart callback');\n      },\n      onPlaybackStatusUpdate: function(evt) {\n        // console.log('onPlaybackStatusUpdate callback: ', evt);\n      },\n      onReadyForDisplay: function(evt) {\n        // console.log('onReadyForDisplay callback');\n      }\n    };\n  }\n\n  async init() {\n    self.config = await API.getAllConfig(self.props.api, self.props.appId, self.props.entityId, self.props.playerId);\n    if (self.config && self.config.linkPlay) {\n      await Promise\n        .all([\n          self.config.linkPlay.hls,\n          self.config.linkPlay.hls_ts,\n          self.config.linkPlay.mpd,\n          self.config.linkPlay.hevc\n        ])\n        .then(items => {\n          return items.map(linkPlays => {\n            return linkPlays.map(linkPlay => {\n              linkPlay.url = Utils.urlToHttps(linkPlay.url);\n              return linkPlay;\n            });\n          });\n        });\n    }\n    self.inited = true;\n\n    return self.inited;\n  }\n\n  render() {\n    const view = (\n      <View {...this.props}>\n        <Video\n          ref={\n            component => {\n              self.video = component;\n            }\n          }\n          useNativeControls={true}\n          resizeMode={Expo.Video.RESIZE_MODE_CONTAIN}\n          style={styles.video}\n          onError={self.listener.onError}\n          onFullscreenUpdate={self.listener.onFullscreenUpdate}\n          onLoad={self.listener.onLoad}\n          onLoadStart={self.listener.onLoadStart}\n          onPlaybackStatusUpdate={self.listener.onPlaybackStatusUpdate}\n          onReadyForDisplay={self.listener.onReadyForDisplay}\n        />\n      </View>\n    );\n\n    Promise.resolve(self.init()).then(async function(res) {\n      if (self.video) {\n        try {\n          let url = getDefaultLinkPlay(self.config.linkPlay);\n\n          await self.video.loadAsync({ uri: url });\n          await self.video.setStatusAsync({\n            positionMillis: 0, // for resume\n            isLooping: true,\n            shouldPlay: true\n          });\n\n        } catch (e) {\n          console.log('error: ', e);\n        }\n      }\n    });\n\n    return view;\n  }\n}\n\nlet self = null;\n\nconst styles = StyleSheet.create({\n  video: {\n    width: '100%',\n    height: '100%',\n  }\n});\n\nconst getDefaultLinkPlay = function(linkPlays) {\n  if (Platform.OS === 'ios') {\n    if (parseInt(Platform.Version, 10) >= 10) {\n      return linkPlays.hls[0].url;\n    }\n  } else { // android\n    if (parseInt(Platform.Version, 10) >= 16) { // API 16 ~ android 4.1\n      return linkPlays.mpd[0].url;\n    }\n  }\n\n  return linkPlays.hls_ts[0].url;\n};\n"]}